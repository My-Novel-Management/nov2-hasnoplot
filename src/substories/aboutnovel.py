# -*- coding: utf-8 -*-
"""Block: 小説について
"""
## path
import os
import sys
sys.path.append(os.path.join(os.path.dirname(__file__), '../..'))
sys.path.append('storybuilder')
## local libs
from storybuilder.builder.world import World
from storybuilder.builder.writer import Writer
## local files


## define alias
W = Writer
_ = W.getWho()


## blocks
def bk_aboutnovel(w: World):
    sana, noto = W(w.sana), W(w.noto)
    manupaper = W(w.manupaper)
    return (
            w.block("プロットとは",
                noto.talk("プロットと言葉を君たち編集は安易に使うけれど、それが一体どういうものを差すのか理解しているかね？"),
                sana.talk("お話の筋みたいなものですよね？　どんな話か確認したい時にプロットを、と言います"),
                noto.talk("筋が知りたいならあらすじを尋ねれば良いじゃないか。プロットはあらすじのことか？"),
                sana.talk("あらすじだけじゃなくて、メインキャラクターのこととか、世界観とか、そういったものもあれば嬉しいです"),
                noto.talk("ならそれをまとめたものがプロットか？"),
                sana.talk("そんな感じだと思いますけど"),
                noto.talk("何の為にそれが必要になるのかね？"),
                sana.talk("短編ならまだしも長編は初稿が上がるまでに時間がかかります。取材費用とかもあるし、会社の方にも出版枠があります"),
                _.talk("編集会議などでどの作品をどう打っていくのか、ラインナップするのか、そういった時にプロットがあると話がしやすいです"),
                _.talk("だからまずはプロットを、と言うみたいですけど"),
                noto.talk("つまり、企画書が欲しいという訳だね？"),
                sana.talk("そうですね。ただ企画書だと世界設定とかしか書かれてなかったり、そもそもこういう話が書きたいです、みたいな宣言文だったりして、"),
                _.talk("なかなか企画会議や編集会議に持っていけないものだったりするので、できればお話の雰囲気くらいはつかめるものが欲しいんです"),
                noto.talk("それは編集が欲しいプロットだ"),
                _.talk("しかし作家にとってプロットというのは異なる"),
                _.talk("作家が欲しいのは物語の指針となる、あるいは設計図となるプロットだ"),
                noto.talk("どんな出来事があり、どんな展開になっていくのか。そういったことを全く何のメモもなしに書くのは心もとない"),
                _.talk("当然小説には行き先を決めずに書くという手法もあるし、純文学などはこういった模索しながらというのも多いだろう"),
                _.talk("だがミステリだと逆にトリックから逆算して作ることになるからプロットが重要になる"),
                noto.talk("ひとくちにプロットと言っても、一体誰が何の目的で使うのかということで必要とされる項目も内容も規模も違ってくる"),
                noto.talk("しかし何でもかんでもプロットと言ってしまうから間違いが起こる"),
                noto.talk("言葉を使う職業をしておきながら、その意味するところが多岐に渡るのにプロットはありますか？　というのはいかがなものかと言っているのだ"),
                ),
            w.block("短編と長編の違い",
                noto.talk("そういえば$sana君。君は長編と短編の違いは理解しているのかね？"),
                sana.talk("文字数や作品の規模の違い等でしょうか？"),
                _.think("実際$Sは読んでいる作品が長くても短くても原稿枚数くらいの違いしか感じたことはなかった"),
                noto.do("机の上に原稿用紙の新しいページを広げ、そこに何か書き込む", w.manupaper),
                sana.talk("それは何ですか？"),
                manupaper.look("二つの丸囲いがあり、その中にそれぞれ左側は大小いくつもの丸が飛び出すように書いてある"),
                _.look("右側は三つの小さな丸が円に収まるように書かれている"),
                noto.talk("長編はその中にいくつものテーマやサブストーリーを持っている"),
                _.talk("スケールの大きいものになると当然一冊の中では問題は解決されず、複数巻に渡りそれを扱うということになる"),
                _.talk("対して短編だ"),
                _.talk("これは特殊な場合を除き、その作品内で問題は解決しておかなければならない"),
                _.talk("言い方を変えると短編は箱庭なんだよ"),
                _.talk("その小さな中にいかに世界やテーマを表現するか。その技巧の勝負とも言える"),
                _.talk("しかし長編は箱庭ではない。言い換えるならサグラダファミリアだ"),
                _.talk("構想はあってもその全容を見るのはいつになるか分からない"),
                _.talk("人によっては永遠に完成しない。それでも作品としては成立している"),
                _.talk("そういった違いがあるのは、理解してくれたかな？"),
                ),
            )

